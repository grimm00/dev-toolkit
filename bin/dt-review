#!/usr/bin/env bash

# Dev Toolkit - Quick Sourcery Review Extractor
# Convenience wrapper for dt-sourcery-parse with standard output location

set -euo pipefail

# Detect DT_ROOT with enhanced local development detection
if [ -n "${DT_ROOT:-}" ]; then
    TOOLKIT_ROOT="$DT_ROOT"
elif [ -f "$(dirname "${BASH_SOURCE[0]}")/../lib/sourcery/parser.sh" ]; then
    # Running from dev-toolkit directory - use local development version
    TOOLKIT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
elif [ -f "$HOME/.dev-toolkit/bin/dt-sourcery-parse" ]; then
    TOOLKIT_ROOT="$HOME/.dev-toolkit"
else
    echo "‚ùå Error: Cannot locate dev-toolkit installation"
    echo "üí° Set DT_ROOT environment variable or install to ~/.dev-toolkit"
    exit 1
fi

# Handle help flags
if [[ "${1:-}" == "--help" ]] || [[ "${1:-}" == "-h" ]]; then
    echo "Usage: dt-review <PR_NUMBER> [OUTPUT_PATH]"
    echo ""
    echo "Extracts Sourcery review and saves to standard location or custom path"
    echo ""
    echo "This is a convenience wrapper for dt-sourcery-parse that:"
    echo "  - Automatically adds --rich-details flag"
    echo "  - Saves to admin/feedback/sourcery/pr<NUMBER>.md by default"
    echo "  - Accepts custom output path as second argument"
    echo "  - Formats PR number with leading zero (e.g., pr06.md)"
    echo ""
    echo "Examples:"
    echo "  dt-review 6"
    echo "  # Saves to admin/feedback/sourcery/pr06.md"
    echo ""
    echo "  dt-review 6 custom-review.md"
    echo "  # Saves to custom-review.md"
    echo ""
    echo "For more options, use dt-sourcery-parse directly:"
    echo "  dt-sourcery-parse --help"
    exit 0
fi

# Get PR number
PR_NUMBER="${1:-}"

if [ -z "$PR_NUMBER" ]; then
    echo "Usage: dt-review <PR_NUMBER> [OUTPUT_PATH]"
    echo ""
    echo "Extracts Sourcery review and saves to standard location or custom path"
    echo ""
    echo "Examples:"
    echo "  dt-review 6"
    echo "  # Saves to admin/feedback/sourcery/pr06.md"
    echo ""
    echo "  dt-review 6 custom-review.md"
    echo "  # Saves to custom-review.md"
    echo ""
    echo "Use --help for more information"
    exit 1
fi

# Determine output file
if [ -n "${2:-}" ]; then
    # Custom output path provided
    OUTPUT_FILE="$2"
else
    # Default output path
    PR_PADDED=$(printf "pr%02d" "$PR_NUMBER")
    mkdir -p admin/feedback/sourcery
    OUTPUT_FILE="admin/feedback/sourcery/${PR_PADDED}.md"
fi

# Run the parser with rich details - let it do all the heavy lifting
echo "üìã Extracting Sourcery review for PR #${PR_NUMBER}..."
echo ""

if "$TOOLKIT_ROOT/bin/dt-sourcery-parse" "$PR_NUMBER" --rich-details --output "$OUTPUT_FILE"; then
    echo ""
    echo "‚úÖ Review saved to: $OUTPUT_FILE"
    echo ""
    echo "üí° View the review:"
    echo "   cat $OUTPUT_FILE"
    echo "   code $OUTPUT_FILE"
else
    echo ""
    echo "‚ùå Failed to extract review"
    exit 1
fi
